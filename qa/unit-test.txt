Test git rev: 97868341864ea83f0fa7db393cb160f929a157b9
Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] 
What's your favorite int?


What's your favorite int?


What's your favorite int?


Is the Company the client?
[y=client/n=contractor] 
Is the Company the client?
[y=client/n=contractor] 
Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] 
Enter one or more comma separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more comma separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more comma separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more "|' separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more "|' separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more "~' separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more ".' separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more "&' separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more "(' separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more ")' separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more "{' separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more "}' separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more "|&(' separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more " ' separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more " ' separated values.
Is the Company the client? [y=client/n=contractor]

1) Hi
2) Bye

Enter one or more comma separated selections.
Is the Company the client? [y=client/n=contractor]

1) Hi
2) Bye

Enter one or more comma separated selections.
Is the Company the client? [y=client/n=contractor]

1) Hi
2) Bye

Enter one or more comma separated selections.
Is the Company the client? [y=client/n=contractor]

1) Hi
2) Bye

Enter one or more "|' separated selections.
Is the Company the client? [y=client/n=contractor]

1) Hi
2) Bye

Enter one or more "~' separated selections.
Is the Company the client? [y=client/n=contractor]

1) Hi
2) Bye

Enter one or more "|&(' separated selections.
Is the Company the client? [y=client/n=contractor]

1) Hi
2) Bye

Enter one or more " ' separated selections.
Is the Company the client? [y=client/n=contractor]

1) Hi
2) Bye

Enter one or more " ' separated selections.
Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] Is the Company the client?
[y=client/n=contractor] 
Enter one or more comma separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more comma separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more comma separated values.
Is the Company the client?
[y=client/n=contractor] 
Enter one or more comma separated values.
Is the Company the client?
[y=client/n=contractor] 
PASS lib/test/questioner.test.js
  Questioner
    QnA flow
      ✓ skips questions with a pre-existing parameter value (from previous question) (58 ms)
      ✓ question is skipped if parameter defined in initial values (1 ms)
      ✓ initially defined string values are transformed according to the parameter type (bool: false)
      ✓ initially defined string values are transformed according to the parameter type (int: 100)
      ✓ initially defined string values are transformed according to the parameter type (int: -1) (1 ms)
      ✓ when question is condition-skipped, uses 'elseValue' if present (1 ms)
      ✓ Will re-ask questions when answer form invalid (57 ms)
      ✓ Will raise an exception on an invalid parameter type. (20 ms)
      ✓ Will raise an exception on no 'parameter' for question. (1 ms)
    boolean questions
      ✓ simple boolean question answer '1' -> 1 (8 ms)
      ✓ simple boolean question answer '0' -> 0 (1 ms)
      ✓ simple boolean question answer '-1' -> -1
      ✓ simple boolean question answer 'y' -> true (1 ms)
      ✓ simple boolean question answer 'n' -> false (1 ms)
      ✓ simple boolean question answer 'Y' -> true (1 ms)
      ✓ simple boolean question answer 'N' -> false (1 ms)
      ✓ simple boolean question answer 't' -> true (1 ms)
      ✓ simple boolean question answer 'T' -> true
      ✓ simple boolean question answer 'f' -> false
      ✓ simple boolean question answer 'F' -> false (1 ms)
      ✓ simple boolean question answer 'yes' -> true
      ✓ simple boolean question answer 'Yes' -> true (1 ms)
      ✓ simple boolean question answer 'no' -> false
      ✓ simple boolean question answer 'No' -> false (1 ms)
      ✓ simple boolean question answer 'true' -> true
      ✓ simple boolean question answer 'True' -> true
      ✓ simple boolean question answer 'false' -> false (1 ms)
      ✓ simple boolean question answer 'False' -> false
    Mappings
      ✓ value map no -> them
      ✓ source map 'FAVE_INT'=1, yields 'FAVE_DIFF'=2' (1 ms)
      ✓ source map 'FAVE_INT'=1, yields 'IS_FAVE_NOT_ZERO'=true' (1 ms)
      ✓ source map 'FAVE_INT'=0, yields 'IS_FAVE_NOT_ZERO'=false' (1 ms)
      ✓ maps 'source'd paramType bool input 'y' -> true
      ✓ maps 'source'd paramType int input '1' -> 1 (1 ms)
    Conditional questions
      ✓ Conditional question yes -> Do you like milk? (59 ms)
      ✓ Conditional question no -> Is this the end? (58 ms)
      ✓ when question is condition-skipped, uses 'elseSource' if present (1 ms)
    Value transforms
      ✓ Value 'true' type 'boolean' -> true (1 ms)
      ✓ Value 'true' type 'bool' -> true
      ✓ Value 'true' type 'string' -> "true"
      ✓ Value '5' type 'integer' -> 5
      ✓ Value '5.5' type 'float' -> 5.5
      ✓ Value '6.6' type 'numeric' -> 6.6 (1 ms)
    multi-value input (free form)
      ✓ Answer 'Hi' sep 'undefined' -> ["Hi"] (1 ms)
      ✓ Answer 'Hi,Bye' sep 'undefined' -> ["Hi", "Bye"]
      ✓ Answer ' Hi, Bye ' sep 'undefined' -> ["Hi", "Bye"] (1 ms)
      ✓ Answer 'Hi,Bye' sep '|' -> ["Hi,Bye"]
      ✓ Answer 'Hi|Bye' sep '|' -> ["Hi", "Bye"] (1 ms)
      ✓ Answer 'Hi~Bye' sep '~' -> ["Hi", "Bye"]
      ✓ Answer 'Hi.Bye' sep '.' -> ["Hi", "Bye"]
      ✓ Answer 'Hi&Bye' sep '&' -> ["Hi", "Bye"]
      ✓ Answer 'Hi(Bye' sep '(' -> ["Hi", "Bye"]
      ✓ Answer 'Hi)Bye' sep ')' -> ["Hi", "Bye"] (1 ms)
      ✓ Answer 'Hi{Bye' sep '{' -> ["Hi", "Bye"]
      ✓ Answer 'Hi}Bye' sep '}' -> ["Hi", "Bye"] (1 ms)
      ✓ Answer 'Hi|&(Bye' sep '|&(' -> ["Hi", "Bye"]
      ✓ Answer 'Hi Bye' sep ' ' -> ["Hi", "Bye"] (1 ms)
      ✓ Answer ' Hi   Bye ' sep ' ' -> ["Hi", "Bye"]
    multi-value input (option locked)
      ✓ Answer '1' sep 'undefined' -> ["Hi"] (1 ms)
      ✓ Answer '1,2' sep 'undefined' -> ["Hi", "Bye"] (1 ms)
      ✓ Answer ' 1, 2 ' sep 'undefined' -> ["Hi", "Bye"]
      ✓ Answer '1|2' sep '|' -> ["Hi", "Bye"] (1 ms)
      ✓ Answer '1~2' sep '~' -> ["Hi", "Bye"]
      ✓ Answer '1|&(2' sep '|&(' -> ["Hi", "Bye"] (1 ms)
      ✓ Answer '1 2' sep ' ' -> ["Hi", "Bye"]
      ✓ Answer ' 1   2 ' sep ' ' -> ["Hi", "Bye"] (1 ms)
    answer requirements (single value)
      ✓ Value 'Hi' (string) and requirement requireSomething=true is accepted
      ✓ Value '1' (int) and requirement requireSomething=true is accepted (1 ms)
      ✓ Value 'true' (bool) and requirement requireSomething=true is accepted
      ✓ Value 'Hi' (string) and requirement requireTruthy=true is accepted
      ✓ Value '1' (int) and requirement requireTruthy=true is accepted (1 ms)
      ✓ Value 'true' (bool) and requirement requireTruthy=true is accepted (1 ms)
      ✓ Value 'Hi' (string) and requirement requireExact=Hi is accepted (1 ms)
      ✓ Value '1' (int) and requirement requireExact=1 is accepted
      ✓ Value 'true' (bool) and requirement requireExact=true is accepted (1 ms)
      ✓ Value 'false' (bool) and requirement requireExact=false is accepted
      ✓ Value 'Hi' (string) and requirement requireOneOf=[ 'Hi', 'Bye' ] is accepted (1 ms)
      ✓ Value '1' (int) and requirement requireOneOf=[ 1, 2 ] is accepted
      ✓ Value 'true' (bool) and requirement requireOneOf=[ true, false ] is accepted
      ✓ Value 'false' (bool) and requirement requireOneOf=[ false, true ] is accepted (1 ms)
      ✓ Value 'Hi' (string) and requirement requireMatch=Hi is accepted
      ✓ Value 'Hi' (string) and requirement requireMatch=[Hi]* is accepted
      ✓ Value 'Hi' (string) and requirement requireMatch=^[Hi]*$ is accepted
      ✓ Value '' (string) and requirement requireSomething=true is rejected (58 ms)
      ✓ Value '' (string) and requirement requireTruthy=true is rejected (57 ms)
      ✓ Value '0' (int) and requirement requireTruthy=true is rejected (58 ms)
      ✓ Value 'false' (bool) and requirement requireExact=true is rejected (58 ms)
      ✓ Value 'Hi' (string) and requirement requireExact=Bye is rejected (57 ms)
      ✓ Value '1' (int) and requirement requireExact=2 is rejected (58 ms)
      ✓ Value 'true' (bool) and requirement requireExact=false is rejected (58 ms)
      ✓ Value 'false' (bool) and requirement requireExact=true is rejected (57 ms)
      ✓ Value 'Hello' (string) and requirement requireOneOf=Hi, Bye is rejected (56 ms)
      ✓ Value '10' (int) and requirement requireOneOf=1,2 is rejected (57 ms)
      ✓ Value 'false' (bool) and requirement requireOneOf=true is rejected (57 ms)
      ✓ Value 'Hi' (string) and requirement requireMatch=Bye is rejected (56 ms)
      ✓ Value 'Hi' (string) and requirement requireMatch=^[Bye]*$ is rejected (57 ms)
    answer requirements (multi value)
      ✓ Value 'Hi,Bye' (requireMinCount) and requirement 1=%s is accepted (1 ms)
      ✓ Value 'Hi,Bye' (requireMinCount) and requirement 2=%s is accepted (1 ms)
      ✓ Value 'Hi,Bye' (requireMaxCount) and requirement 3=%s is accepted
      ✓ Value 'Hi,Bye' (requireMaxCount) and requirement 2=%s is accepted
      ✓ Value 'Hi' (requireMinCount) and requirement 2=%s is rejected (60 ms)
      ✓ Value 'Hi,Bye' (requireMinCount) and requirement 3=%s is rejected (57 ms)
      ✓ Value 'Hi,Bye' (requireMaxCount) and requirement 1=%s is rejected (56 ms)
      ✓ Value 'Hi,Bye,Blah' (requireMaxCount) and requirement 2=%s is rejected (58 ms)
    cookie parameters
      ✓ are passed from questions
      ✓ are passed from maps
    statements
      ✓ prints statement (59 ms)
      ✓ properly skips condition skip statements (58 ms)

----------------|---------|----------|---------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
File            | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                                                                                                                                            
----------------|---------|----------|---------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
All files       |   66.02 |    63.39 |   76.47 |   65.78 |                                                                                                                                                                              
 questioner.mjs |   66.02 |    63.39 |   76.47 |   65.78 | 86,93-97,105,116-121,138-139,142,172,191-196,245-264,271-272,297,304,314,333-400,406,412,422,425,437,445,454-456,477,500,509-515,525,531,543,546,549,553,556,559,564,570,574 
----------------|---------|----------|---------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Test Suites: 1 passed, 1 total
Tests:       108 passed, 108 total
Snapshots:   0 total
Time:        1.816 s, estimated 2 s
Ran all test suites.
